import React from "react";

const ItemFooter = (props) => {
  const { item } = props;

  const renderStar = () => {
    return (
      <svg width="12" height="12">
        <path
          d="M4.33333 4.33333L6 1L7.66667 4.33333L11 4.61111L8.77778 7.66667L9.33333 11L6 9.33333L2.66667 11L3.22222 7.66667L1 4.61111L4.33333 4.33333Z"
          fill="rgba(255, 206, 82, 1)"
        ></path>
      </svg>
    );
  };

  const renderTruck = () => {
    return (
      <svg width="15" height="13">
        <path
          d="M11.6506 10.5088C12.162 10.526 12.6316 10.0937 12.6892 9.59863C12.7533 9.04964 12.371 8.65327 11.8702 8.64774C11.3152 8.64153 10.8737 9.05724 10.8121 9.57722C10.7494 10.1062 11.1467 10.5246 11.6506 10.5088ZM7.44026 9.5862C7.49613 9.06207 7.14468 8.65672 6.61431 8.64774C6.07978 8.63877 5.62783 9.05517 5.56233 9.56548C5.49626 10.0875 5.88775 10.5274 6.40165 10.5088C6.88999 10.5274 7.38356 10.1179 7.44026 9.5862ZM10.8388 6.47184H13.6567C13.6586 6.45356 13.6607 6.43556 13.6628 6.41775L13.6628 6.41771C13.6683 6.37093 13.6736 6.32556 13.6759 6.28055C13.6769 6.25846 13.67 6.23222 13.6563 6.21772C13.0904 5.58518 12.5231 4.95333 11.9557 4.32217C11.9446 4.30974 11.9272 4.29662 11.9112 4.29662C11.7032 4.29558 11.495 4.29571 11.2851 4.29584H11.2851L11.0737 4.29593L10.8388 6.47184ZM4.31372 9.57653C4.07995 9.57377 3.88263 9.49712 3.72214 9.34312C3.56096 9.18913 3.48111 8.99578 3.47768 8.76376L3.47724 8.74351C3.47648 8.7114 3.47571 8.67899 3.47916 8.64705L3.64752 7.08556L3.71795 6.432L6.38562 6.432C6.94228 6.431 7.4408 5.98315 7.50141 5.43098L7.52406 5.22108C7.55609 4.9192 7.45086 4.64759 7.25786 4.46405C7.49042 4.28064 7.65422 4.01003 7.68739 3.70775L7.71005 3.49786C7.76863 2.94568 7.36778 2.49694 6.81134 2.49594L4.14431 2.49594L4.15467 2.40107C4.17884 2.18355 4.28236 1.9902 4.44464 1.82516C4.60538 1.6615 4.79663 1.56275 5.012 1.51717C5.05888 1.5075 5.10733 1.50267 5.15386 1.50267L6.29766 1.50222C7.73397 1.5016 8.77996 1.50114 10.4694 1.50336C10.695 1.50405 10.8826 1.59382 11.0345 1.74367C11.1764 1.88316 11.255 2.0558 11.2725 2.26089C11.2766 2.30647 11.2785 2.35342 11.2735 2.39969C11.2503 2.62396 11.226 2.84822 11.2016 3.07249L11.1774 3.29671L11.1701 3.36438H11.2353C11.3177 3.36438 11.4001 3.36453 11.4826 3.36469H11.4827H11.4827C11.6477 3.365 11.8129 3.3653 11.9778 3.36438C12.276 3.36231 12.5147 3.46796 12.7018 3.6772C13.1186 4.14252 13.5362 4.60745 13.9537 5.07228L13.9557 5.07451L14.374 5.54029C14.5011 5.68185 14.5897 5.84482 14.6093 6.04301C14.6139 6.09066 14.6163 6.13899 14.6111 6.18733C14.5378 6.87947 14.463 7.57231 14.3884 8.26376L14.3882 8.26518L14.3803 8.33907C14.4146 8.33907 14.4485 8.33923 14.4821 8.33938H14.4821C14.5485 8.33969 14.6138 8.33999 14.6789 8.33907C14.8829 8.33493 14.9986 8.5048 14.9748 8.66708C14.9551 8.80287 14.9415 8.93897 14.9279 9.07517L14.9278 9.07537C14.921 9.14343 14.9142 9.21151 14.9066 9.27959C14.889 9.43635 14.7315 9.57653 14.5745 9.57653C14.3434 9.57756 14.1123 9.57743 13.8812 9.57731H13.8807L13.6493 9.57722C13.6476 9.57722 13.6459 9.57754 13.6429 9.57812C13.6397 9.57873 13.635 9.57961 13.6274 9.58067C13.5293 10.2712 13.1708 10.8126 12.5353 11.1793C12.1752 11.3878 11.7906 11.47 11.4004 11.4369C10.9214 11.3961 10.5287 11.1986 10.238 10.8416C9.94982 10.4874 9.82991 10.0668 9.8796 9.58067H8.37364C8.30923 10.1324 8.04885 10.5951 7.60474 10.9645C7.29188 11.2249 6.93331 11.3809 6.5443 11.4265C5.98011 11.4928 5.49514 11.3464 5.11334 10.9776C4.73348 10.6103 4.57609 10.1379 4.62897 9.57722L4.54393 9.57731H4.5437C4.46338 9.57744 4.38849 9.57756 4.31372 9.57653ZM7.0015 5.43008C6.97092 5.70873 6.72011 5.93438 6.43928 5.93489H3.77155L2.76271 5.93489C2.48249 5.93438 2.27988 5.70873 2.30945 5.43007L2.33201 5.22108C2.36259 4.94243 2.61391 4.71678 2.89423 4.71627L6.5708 4.71627C6.85153 4.71678 7.05363 4.94243 7.02406 5.22108L7.0015 5.43008ZM7.18749 3.70685C7.15685 3.98601 6.9061 4.21116 6.62526 4.21166H3.95775L1.21526 4.21166C0.935042 4.21116 0.732435 3.98551 0.762002 3.70685L0.784559 3.49786C0.815141 3.2192 1.06646 2.99355 1.34678 2.99305L6.75678 2.99305C7.03751 2.99355 7.23961 3.2192 7.21004 3.49786L7.18749 3.70685Z"
          fill="rgba(0, 131, 138, 1)"
        ></path>
      </svg>
    );
  };

  const renderPrice = () => {
    let style = { fontSize: "1.2rem" };
    if (item.oldPrice) {
      style.textDecoration = "line-through";
    } else {
      style.color = "rgb(255, 87, 118)";
    }
    return (
      <div>
        <div style={style}>
          {item.oldPrice ? item.oldPrice.formatted : "Endast"}
        </div>
        <div style={{ color: "rgb(255, 87, 118)", fontSize: "2.2rem" }}>
          {item.price.formatted}
        </div>
      </div>
    );
  };

  const renderTitle = () => {
    const maxLength = 50;
    let title = item.title;
    if (title.length > maxLength) {
      title = `${title.substring(0, maxLength)}...`;
    }
    return (
      <div
        style={{ fontSize: "16px", wordWrap: "break-word" }}
        title={item.title}
      >
        {title}
      </div>
    );
  };

  const renderScoreAndShipping = () => {
    return (
      <div
        style={{
          display: "grid",
          gridTemplateColumns: "1fr 1fr",
          fontSize: "12px",
          color: "rgb(0,131,138)",
          paddingTop: "5px",
        }}
      >
        <div>
          {renderStar()} {item.averageRating}
        </div>

        <div>
          {renderTruck()}{" "}
          {`${item.shippingTimeMin} - ${item.shippingTimeMax} dagar`}
        </div>
      </div>
    );
  };

  return item ? (
    <div>
      {renderPrice()}
      {renderTitle()}
      {renderScoreAndShipping()}
    </div>
  ) : (
    <React.Fragment></React.Fragment>
  );
};

export default ItemFooter;
